---
title: "[BETA] TBR 1.39c Item Library"
format:
  html:
    page-layout: full
    theme: darkly
date: last-modified
editor: source
---

<!-- 
To-do: 
- CSS Theme of the Item Library... 
- Table filters
- Table functionality
- Icons: https://docs.google.com/spreadsheets/d/1OMMIJZ8maoltPFcY_ZSSS4WaUr9ReJKe1DqFHDrFmYQ/edit?gid=583245039#gid=583245039&fvid=383852340
- Acquisition
-->

```{css, echo = FALSE}
.dataTable, .dataTables_wrapper .dataTables_info, label {
  color: white;
}

.dataTables_wrapper .dataTables_paginate .paginate_button.current, .dataTables_wrapper .dataTables_paginate .paginate_button.current:hover, .dataTables_wrapper .dataTables_paginate .paginate_button.disabled, .dataTables_wrapper .dataTables_paginate .paginate_button {
  color: white !important;
}
```

```{r setup}
#| include: false

library(dplyr)
library(DT)

item.lines <- readLines("../the-black-road-rpg/src/table/item.ini")
# unit.lines <- readLines("unit.ini")
# crafting.lines <- readLines("02-Initilization.j")
# forging.lines <- readLines("Forge-Craftmen.j")
# regalia.lines <- readLines("Forge-Regalia.j")

item.rawcode.pos <- grep("\\[I...\\]", item.lines)

item_helpr <- \(start, end, field) {
  x <- item.lines[start:end]
  which.line <- grep(paste0("^", field), x)
  
  out <- switch(
    field,
    "Name" = gsub("Name = \"(.+)\"", "\\1", x[which.line]),
    "class" = gsub("class = \"(.+)\"", "\\1", x[which.line]),
    "_parent" = gsub("_parent = \"(.+)\"", "\\1", x[which.line]),
    "Level" = gsub("Level = ([0-9]+)", "\\1", x[which.line]),
    "prio" = gsub("prio = ([0-9]+)", "\\1", x[which.line]),
    "Ubertip" = gsub("Ubertip = \"(.+)\"", "\\1", x[which.line])
  )
  
  return (ifelse(is.null(out), "", out))
}

item_wrapr <- \(field) {
  out <- sapply(1:length(item.rawcode.pos), \(x) {
    item_helpr(item.rawcode.pos[x], if_else(x == length(item.rawcode.pos), length(item.lines), item.rawcode.pos[x + 1] - 1), field)
  })
  
  if (field == "Name") {
    x <- gsub("\\|r", "</span>", out)
    out <- if_else(grepl("</span>", x), sub("\\|?c?[A-Za-z0-9]?[A-Za-z0-9]?([A-Za-z0-9][A-Za-z0-9][A-Za-z0-9][A-Za-z0-9][A-Za-z0-9][A-Za-z0-9])", "<span style='color: #\\1'>", x)  , x)
  }
  
  if (field == "Ubertip") {
    a <- sub("(\\|n)*\\|c[A-Za-z0-9][A-Za-z0-9][A-Za-z0-9][A-Za-z0-9][A-Za-z0-9][A-Za-z0-9][A-Za-z0-9][A-Za-z0-9]Requires Level [0-9]*\\|r", "", out) |>
      gsub("\\|r", "</span>", x = _) |>
      gsub("\\|n", "<br>", x = _)
    
    b <- if_else(grepl("</span>", a), gsub("\\|c[A-Za-z0-9][A-Za-z0-9]([A-Za-z0-9][A-Za-z0-9][A-Za-z0-9][A-Za-z0-9][A-Za-z0-9][A-Za-z0-9])", "<span style='color: #\\1'>", a), a)
    out <- b |>
      sub("(<br>)*<span style='color: #ff0000'>.*</span>", "", x = _) |>
      sub("(<br>)*<span style='color: #fa8072'>.*</span>", "", x = _) |>
      sub("(<br>)*<span style='color: #73C2FB'>.*</span>", "", x = _)
  }

  return (out)
}

item.df <- tibble(
  rawcode = item.lines[grep("\\[I...\\]", item.lines)],
  parentcode = item_wrapr("_parent"),
  name = item_wrapr("Name"),
  class = item_wrapr("class"),
  level = item_wrapr("Level"),
  prio = item_wrapr("prio"),
  tooltip = item_wrapr("Ubertip")
) |> mutate(
  class = if_else(is.na(class), case_match(parentcode,
                                           c("kymn", "kybl", "azhr", "sehr", "kygh", "bzbf") ~ "Campaign",
                                           c("rwiz", "evtl", "rlif", "mcou", "penr", "rat6", "pmna", "rde1", "rhth", "bgst", "belv", "cnob", "clsd", "ciri") ~ "Permanent",
                                           c("sreg", "k3m3", "wneg", "phea", "pman", "shea", "spro", "stwp", "shas", "sman") ~ "Purchasable",
                                           c("rnsp", "oslo", "frhg") ~ "Miscellaneous",
                                           c("ckng", "desc") ~ "Artifact",
                                           c("ankh", "pghe", "pgma", "sror", "rej3") ~ "Charged",
                                           c("rres", "gold", "lmbr") ~ "PowerUp"), class),
  name = if_else(is.na(name), case_match(parentcode,
                                         "kymn" ~ "Moon Key",
                                         "cnob" ~ "Circlet of Nobility",
                                         "frhg" ~ "Firehand Gauntlets",
                                         "rres" ~ "Rune of Restoration",
                                         "gold" ~ "Gold Coins"), name),
  prio = if_else(!is.na(prio), case_match(prio,
                                          "1" ~ "Forge Dummy",
                                          "1001" ~ "Cannot be used by Warrior classes",
                                          "1002" ~ "Khaos Champion, Barbarian, Warlord, Assassin only",
                                          "1003" ~ "Barbarian Only",
                                          "1004" ~ "Warlord Only",
                                          "1005" ~ "Temple Guardian Only",
                                          "1006" ~ "Ranger Only",
                                          "1007" ~ "Khaos Champion Only",
                                          "1008" ~ "Cleric only",
                                          "1009" ~ "Assassin only",
                                          "1010" ~ "Magician only",
                                          "1011" ~ "Warlock only",
                                          "1012" ~ "Guardian of Nature only",
                                          "1013" ~ "Spartan Warrior only",
                                          "1014" ~ "Druid only"
                                          ), NA_character_),
  level = as.numeric(level),
  level = if_else(is.na(level), case_match(parentcode,
                                            "rlif" ~ 3,
                                            "mcou" ~ 5,
                                            "rej3" ~ 2,
                                            c("kymn", "kybl") ~ 0),
                  level),
  rarity = case_when(grepl("#00ffff", name) ~ "Uncommon",
                     grepl("#fa8072", name) ~ "Consumables",
                     grepl("#ff7700", name) ~ "Rare",
                     grepl("#ffdead", name) ~ "Artifact",
                     grepl("#32cd32", name) ~ "Epic",
                     grepl("#A1045A", name) ~ "Regalia",
                     grepl("#1E90FF", name) ~ "Relic / Olympian Relic",
                     grepl("#73C2FB", name) ~ "Crafting Component / Unique Crafting Component",
                     .default = "Common"),
  name.clean = gsub("(</span>)|(<span style='color: #.*'>)", "", name))
```

```{r display_items}
#| echo: false
item.df |>
  filter(class != "PowerUp", class != "Campaign", name.clean != "Rune of Restoration", !grepl("Tome of Attribute Increase", name.clean)) |>
  mutate(rarity = factor(rarity, levels = c("Common", "Uncommon", "Consumables", "Crafting Component / Unique Crafting Component", "Rare", "Artifact", "Epic", "Relic / Olympian Relic", "Regalia"), ordered = TRUE)) |>
  arrange(rarity, level, name.clean) |>
  select(name, level, tooltip, prio) |>
  mutate(name.aug = paste0(name, 
                           if_else(level > 0, paste0("<br><span style='color: #ffcc00;'>Requires Level ", level, "</span>"), ""), 
                           if_else(!is.na(prio), paste0("<br><span style='color: #ff0000;'>", prio, "</span>"), ""))) |>
  select(name.aug, tooltip) |>
  datatable(rownames = FALSE, escape = FALSE, colnames = c("Item", "Description"))
```